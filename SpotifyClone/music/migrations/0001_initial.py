# Generated by Django 5.1.7 on 2025-03-23 19:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0002_userfollow'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('bio', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='artist_images/')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('genres', models.ManyToManyField(related_name='artists', to='music.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('cover_image', models.ImageField(upload_to='album_covers/')),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='music.artist')),
                ('genres', models.ManyToManyField(related_name='albums', to='music.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('audio_file', models.FileField(upload_to='songs/')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('duration', models.DurationField()),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_downloadable', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('play_count', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(max_length=255)),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='music.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='music.artist')),
                ('featuring_artists', models.ManyToManyField(blank=True, related_name='featured_in', to='music.artist')),
                ('genres', models.ManyToManyField(related_name='songs', to='music.genre')),
            ],
        ),
        migrations.CreateModel(
            name='ListeningHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listened_at', models.DateTimeField(auto_now_add=True)),
                ('listened_duration', models.DurationField(blank=True, null=True)),
                ('play_position', models.DurationField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listening_history', to='user.user')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listened_by', to='music.song')),
            ],
        ),
        migrations.CreateModel(
            name='SongRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('listening_history', 'Based on Listening History'), ('similar_users', 'Based on Similar Users'), ('genre_preference', 'Based on Genre Preference'), ('trending', 'Trending Songs'), ('new_release', 'New Releases')], max_length=30)),
                ('score', models.FloatField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_seen', models.BooleanField(default=False)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_to', to='music.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='ArtistFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='music.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_follows', to='user.user')),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'artist'], name='music_artis_user_id_efa0ab_idx')],
                'unique_together': {('user', 'artist')},
            },
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['name'], name='music_artis_name_e97718_idx'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['slug'], name='music_artis_slug_38018e_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['title'], name='music_album_title_ddf06b_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['release_date'], name='music_album_release_5ffcba_idx'),
        ),
        migrations.AddIndex(
            model_name='album',
            index=models.Index(fields=['slug'], name='music_album_slug_eeb8f6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='album',
            unique_together={('title', 'artist')},
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['title'], name='music_song_title_8e56ff_idx'),
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['release_date'], name='music_song_release_8872f0_idx'),
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['play_count'], name='music_song_play_co_0d103d_idx'),
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['is_premium'], name='music_song_is_prem_e1f468_idx'),
        ),
        migrations.AddIndex(
            model_name='song',
            index=models.Index(fields=['slug'], name='music_song_slug_f34e4d_idx'),
        ),
        migrations.AddIndex(
            model_name='listeninghistory',
            index=models.Index(fields=['user'], name='music_liste_user_id_8eb455_idx'),
        ),
        migrations.AddIndex(
            model_name='listeninghistory',
            index=models.Index(fields=['listened_at'], name='music_liste_listene_fbc507_idx'),
        ),
        migrations.AddIndex(
            model_name='listeninghistory',
            index=models.Index(fields=['completed'], name='music_liste_complet_c7e99f_idx'),
        ),
        migrations.AddIndex(
            model_name='songrecommendation',
            index=models.Index(fields=['user'], name='music_songr_user_id_403f7b_idx'),
        ),
        migrations.AddIndex(
            model_name='songrecommendation',
            index=models.Index(fields=['score'], name='music_songr_score_c33e4b_idx'),
        ),
        migrations.AddIndex(
            model_name='songrecommendation',
            index=models.Index(fields=['is_seen'], name='music_songr_is_seen_9793fa_idx'),
        ),
        migrations.AddIndex(
            model_name='songrecommendation',
            index=models.Index(fields=['created_at'], name='music_songr_created_c4d137_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='songrecommendation',
            unique_together={('user', 'song', 'recommendation_type')},
        ),
    ]
